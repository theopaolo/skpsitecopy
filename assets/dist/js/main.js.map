{
  "version": 3,
  "sources": ["../../../node_modules/@barba/core/src/modules/Logger.ts", "../../../node_modules/@barba/core/src/defs/hooks.ts", "../../../node_modules/node_modules/path-to-regexp/dist.es2015/index.js", "../../../node_modules/@barba/core/src/schemas/attribute.ts", "../../../node_modules/@barba/core/src/utils/dom.ts", "../../../node_modules/@barba/core/src/utils/history.ts", "../../../node_modules/@barba/core/src/utils/helpers.ts", "../../../node_modules/@barba/core/src/utils/url.ts", "../../../node_modules/@barba/core/src/utils/request.ts", "../../../node_modules/node_modules/is-promise/index.mjs", "../../../node_modules/@barba/core/src/utils/run-async.ts", "../../../node_modules/@barba/core/src/hooks.ts", "../../../node_modules/@barba/core/src/modules/Ignore.ts", "../../../node_modules/@barba/core/src/modules/Cache.ts", "../../../node_modules/@barba/core/src/modules/Headers.ts", "../../../node_modules/@barba/core/src/modules/Prevent.ts", "../../../node_modules/@barba/core/src/modules/Error.ts", "../../../node_modules/@barba/core/src/modules/Store.ts", "../../../node_modules/@barba/core/src/modules/Transitions.ts", "../../../node_modules/@barba/core/src/modules/Views.ts", "../../../node_modules/@barba/core/src/polyfills/index.ts", "../../../node_modules/@barba/core/src/schemas/page.ts", "../../../node_modules/@barba/core/src/core.ts", "../../js/main.js", "../../js/sitefunctions.js", "../../js/animations.js", "../../js/svg.js"],
  "sourcesContent": ["/**\n * @barba/core/modules/Logger\n * <br><br>\n * ## Logger.\n *\n * - Display informations via the console\n *\n * @module core/modules/Logger\n * @preferred\n */\n\n/***/\n\n/**\n * Log levels, all lower level messages are printed\n *\n * 0. mute\n * 1. error = `console.error()`\n * 2. warning= `console.warn()`\n * 3. info = `console.info()`\n * 4. debug = `console.log()`\n */\nexport enum LogLevels {\n  off = 0,\n  error = 1,\n  warning = 2,\n  info = 3,\n  debug = 4,\n}\n\n/**\n * Global log level\n */\nlet _level: number = LogLevels.off;\n\nexport class Logger {\n  /**\n   * Get global log level.\n   */\n  public static getLevel(): number {\n    return _level;\n  }\n\n  /**\n   * Set global log level.\n   */\n  public static setLevel(name: keyof typeof LogLevels): number {\n    _level = LogLevels[name];\n\n    return _level;\n  }\n\n  /**\n   * Log \"prefix\".\n   */\n  private _source: string;\n\n  /**\n   * Creates an instance of Logger.\n   */\n  constructor(source: string) {\n    this._source = source;\n  }\n\n  /**\n   * Permanent, unremovable log.\n   */\n  // public print(...objects: any[]): void {\n  //   this._log(console.info, LogLevels.off, objects);\n  // }\n\n  /**\n   * Error log.\n   */\n  public error(...objects: any[]): void {\n    this._log(console.error, LogLevels.error, objects);\n  }\n\n  /**\n   * Warn log.\n   */\n  public warn(...objects: any[]): void {\n    this._log(console.warn, LogLevels.warning, objects);\n  }\n\n  /**\n   * Info log.\n   */\n  public info(...objects: any[]): void {\n    this._log(console.info, LogLevels.info, objects);\n  }\n\n  /**\n   * Debug log.\n   */\n  public debug(...objects: any[]): void {\n    this._log(console.log, LogLevels.debug, objects);\n  }\n\n  /**\n   * Internal logger.\n   */\n  private _log(fn: () => void, level: number, objects: any[]): void {\n    if (level <= Logger.getLevel()) {\n      fn.apply(console, ([`[${this._source}] `].concat(objects) as unknown) as [\n\n      ]);\n    }\n  }\n}\n", "/**\n * @module typings/core\n */\nimport { ITransitionData, ITransitionPage, IViewData } from './index';\n\nexport type HooksBarba =\n  | 'ready'\n  | 'page'\n  | 'reset'\n  | 'currentAdded'\n  | 'currentRemoved'\n  | 'nextAdded'\n  | 'nextRemoved';\n\nexport type HooksOnce = 'beforeOnce' | 'once' | 'afterOnce';\n\nexport type HooksPage =\n  | 'before'\n  | 'beforeLeave'\n  | 'leave'\n  | 'afterLeave'\n  | 'beforeEnter'\n  | 'enter'\n  | 'afterEnter'\n  | 'after';\n\nexport type HooksBefore = 'beforeOnce' | 'beforeLeave' | 'beforeEnter';\nexport type HooksAfter = 'afterOnce' | 'afterLeave' | 'afterEnter';\n\nexport type HooksTransition = HooksOnce | HooksPage;\nexport type HooksView = HooksBefore | HooksAfter;\nexport type HooksAll = HooksBarba | HooksTransition;\n\n// Allow optional \"dynamically created\" hooks\nexport type HooksTransitionMap = { [key in HooksTransition]?: any };\n\nexport type HookFunction = (\n  data?: ITransitionData | IViewData,\n  t?: ITransitionPage\n) => Promise<void> | void;\n\nexport class HookMethods {\n  public before: (fn: HookFunction, ctx?: any) => void;\n  public beforeLeave: (fn: HookFunction, ctx?: any) => void;\n  public leave: (fn: HookFunction, ctx?: any) => void;\n  public afterLeave: (fn: HookFunction, ctx?: any) => void;\n  public beforeEnter: (fn: HookFunction, ctx?: any) => void;\n  public enter: (fn: HookFunction, ctx?: any) => void;\n  public afterEnter: (fn: HookFunction, ctx?: any) => void;\n  public after: (fn: HookFunction, ctx?: any) => void;\n}\n", "/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    }\n                    else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map", "/**\n * @barba/core/schemas\n * <br><br>\n * ## Schemas description.\n *\n * @module core/schemas\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { ISchemaAttribute } from '../defs';\n\n/**\n * See [[ISchemaAttribute]]\n */\nexport const schemaAttribute: ISchemaAttribute = {\n  container: 'container',\n  history: 'history',\n  namespace: 'namespace',\n  prefix: 'data-barba',\n  prevent: 'prevent',\n  wrapper: 'wrapper',\n};\n", "/**\n * @barba/core/utils/dom\n * <br><br>\n * ## Dom utils\n *\n * - Access DOM contents\n * - DOM vs string conversions\n *\n * @module core/utils/dom\n * @preferred\n */\n\n/***/\n\nimport path from 'path';\n\n// Definitions\nimport { IDomSibling, ISchemaAttribute, Link, Scope, Wrapper } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\nexport class Dom {\n  private _attr: ISchemaAttribute = schemaAttribute;\n  private _parser: DOMParser;\n  private _sibling: IDomSibling = {\n    after: null,\n    before: null,\n    parent: null\n  };\n\n  /**\n   * Convert HTMLDocument to string.\n   */\n  public toString(el: HTMLElement): string {\n    return el.outerHTML;\n  }\n\n  /**\n   * Parse HTML string to HTMLDocument.\n   */\n  // see https://github.com/barbajs/barba/issues/362\n  // Seems that using DOMParser.parseFromString causes this issue.\n  public toDocument(htmlString: string): HTMLDocument {\n    /* istanbul ignore else */\n    if (!this._parser) {\n      this._parser = new DOMParser();\n    }\n    return this._parser.parseFromString(htmlString, 'text/html');\n  }\n\n  /**\n   * Parse HTML string to DIVElement.\n   *\n   * DOMParser.parseFromString fails with img[srcset] on iOS.\n   * see https://github.com/barbajs/barba/issues/362\n   */\n  public toElement(htmlString: string): HTMLDivElement {\n    const div = document.createElement('div');\n\n    div.innerHTML = htmlString;\n    return div;\n  }\n\n  /**\n   * Get HTML content.\n   */\n  public getHtml(doc: HTMLDocument = document): string {\n    return this.toString(doc.documentElement);\n  }\n\n  /**\n   * Get full document content.\n   */\n  // getDocument(el = document.documentElement) {\n  //   return this.toStr(el);\n  // },\n\n  /**\n   * Get `[data-barba=\"wrapper\"]`.\n   */\n  public getWrapper(scope: Scope = document): Wrapper {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.wrapper}\"]`\n    );\n  }\n\n  /**\n   * Get `[data-barba=\"container\"]`.\n   */\n  public getContainer(scope: Scope = document): HTMLElement | null {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.container}\"]`\n    );\n  }\n\n  /**\n   * Remove container and store next sibling (if applicable).\n   */\n  public removeContainer(container: HTMLElement) {\n    if (document.body.contains(container)) {\n      this._updateSibling(container);\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * Add container near previous container\n   */\n  public addContainer(container: HTMLElement, wrapper: HTMLElement) {\n    const siblingBefore = this.getContainer() || this._sibling.before;\n\n    if (siblingBefore) {\n      this._insertAfter(container, siblingBefore);\n    } else if (this._sibling.after) {\n      this._sibling.after.parentNode.insertBefore(container, this._sibling.after);\n    } else if (this._sibling.parent) {\n      this._sibling.parent.appendChild(container);\n    } else {\n      wrapper.appendChild(container);\n    }\n  }\n\n  /**\n   * Get current dom sibling\n   */\n  public getSibling(): IDomSibling {\n    return this._sibling;\n  }\n\n  /**\n   * Get `[data-barba-namespace]`.\n   */\n  public getNamespace(scope: Scope = document): string | null {\n    const ns = scope.querySelector(\n      `[${this._attr.prefix}-${this._attr.namespace}]`\n    );\n\n    return ns\n      ? ns.getAttribute(`${this._attr.prefix}-${this._attr.namespace}`)\n      : null;\n  }\n\n  /**\n   * Get URL from `href` value.\n   */\n  public getHref(el: Link): string | null {\n    // HTML tagName is UPPERCASE, xhtml tagName keeps existing case.\n    if (el.tagName && el.tagName.toLowerCase() === 'a') {\n      // HTMLAnchorElement, full URL available\n      if (typeof el.href === 'string') {\n        return el.href;\n      }\n\n      // Probably a SVGAElement…\n      const href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\n      /* istanbul ignore else */\n      if (href) {\n        // When link comes from SVG, `href` returns an object, not a string.\n        const attr: string =\n          ((href as unknown) as SVGAnimatedString).baseVal || href;\n\n        return this.resolveUrl(attr);\n      }\n    }\n    return null;\n  }\n\n  // Copyright 2014 Simon Lydell\n  // X11 (“MIT”) Licensed. (See LICENSE\n  // https://github.com/lydell/resolve-url/blob/master/resolve-url.js\n  /* istanbul ignore next */\n  public resolveUrl(...urls: string[]) {\n    const numUrls = urls.length;\n\n    if (numUrls === 0) {\n      throw new Error('resolveUrl requires at least one argument; got none.');\n    }\n\n    const base = document.createElement('base');\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(base, head.firstChild);\n\n    const a = document.createElement('a');\n    let resolved;\n\n    for (let index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n\n    return resolved;\n  }\n\n  /**\n   * Insert node after another node.\n   */\n  private _insertAfter(newNode: Node, referenceNode: Node) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n\n  /**\n   * Update current dom sibling regarding container\n   */\n  private _updateSibling(container: HTMLElement): IDomSibling {\n    this._sibling = {\n      after: container.nextElementSibling,\n      before: container.previousElementSibling,\n      parent: container.parentElement\n    };\n\n    return this._sibling;\n  }\n}\n\nconst dom = new Dom();\n\nexport { dom };\n", "import { HistoryAction, LinkEvent, Trigger } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\n/**\n * @barba/core/utils/history\n * <br><br>\n * ## History manager.\n *\n * - Keep track of the navigation history\n *\n * @module core/utils/history\n * @preferred\n */\n\n/**\n * State item.\n *\n * @property from\n * @property index\n */\ninterface IHistoryItem {\n  /** origin */\n  from: string;\n  /** index */\n  index: number;\n  /** states */\n  states: IStateItem[];\n}\n\n/***/\ninterface ICoords {\n  x: number;\n  y: number;\n}\n\n/**\n * History item.\n *\n * @property namespace\n * @property scroll\n * @property URL\n */\ninterface IStateItem {\n  /** data */\n  data: object;\n  /** namespace */\n  ns: string | undefined;\n  /** Scroll position */\n  scroll: ICoords;\n  /** URL */\n  url: string;\n}\n\nexport class History {\n  private _session: string;\n  private _states: IStateItem[] = [];\n  private _pointer = -1;\n\n  /**\n   * Init with first state.\n   */\n  public init(url: string, ns: string): void {\n    this._session = 'barba';\n\n    const state: IStateItem = {\n      data: {},\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._pointer = 0;\n    this._states.push(state);\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index: this._pointer,\n      states: [...this._states],\n    };\n\n    window.history && window.history.replaceState(item, '', url);\n  }\n\n  public change(\n    url: string,\n    trigger: Trigger,\n    e?: LinkEvent | PopStateEvent\n  ): Trigger {\n    if (e && (e as PopStateEvent).state) {\n      // If popstate, move to existing state\n      // and get back/forward direction.\n      const { state }: { state: IHistoryItem } = e as PopStateEvent;\n      const { index } = state;\n      const diff = this._pointer - index;\n\n      trigger = this._getDirection(diff);\n\n      // Work with previous states\n      this.replace(state.states);\n      this._pointer = index;\n    } else {\n      // Add new state\n      this.add(url, trigger);\n    }\n\n    return trigger;\n  }\n\n  /**\n   * Add a new state.\n   */\n  public add(url: string, trigger: Trigger, action?: HistoryAction, data?: object): void {\n    // If no state, it will be updated later.\n    const ns = 'tmp';\n    const method = action ?? this._getAction(trigger);\n    const state: IStateItem = {\n      data: data ?? {},\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    switch (method) {\n      case 'push':\n        this._pointer = this.size;\n        this._states.push(state);\n        break;\n      case 'replace':\n        this.set(this._pointer, state);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index: this._pointer,\n      states: [...this._states],\n    };\n\n    switch (method) {\n      case 'push':\n        window.history && window.history.pushState(item, '', url);\n        break;\n      case 'replace':\n        window.history && window.history.replaceState(item, '', url);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n  }\n\n  /**\n   * Store custom user data per state.\n   */\n   public store(data: object, i?: number): void {\n     const index = i || this._pointer;\n     const state = this.get(index);\n\n     // merge data (allow data overwrite)\n     state.data = {\n       ...state.data,\n       ...data\n     };\n\n     // update states\n     this.set(index, state);\n\n     const item: IHistoryItem = {\n       from: this._session,\n       index: this._pointer,\n       states: [...this._states],\n     };\n\n     // update browser history\n     window.history.replaceState(item, '');\n   }\n\n  /**\n   * Update state.\n   */\n  public update(data: any, i?: number): void {\n    const index = i || this._pointer;\n    const existing = this.get(index);\n    const state: IStateItem = {\n      ...existing,\n      ...data,\n    };\n\n    this.set(index, state);\n  }\n\n  /**\n   * Remove last state.\n   */\n  public remove(i?: number): void {\n    if (i) {\n      this._states.splice(i, 1);\n    } else {\n      this._states.pop();\n    }\n\n    this._pointer--;\n  }\n\n  /**\n   * Delete all states.\n   */\n  public clear(): void {\n    this._states = [];\n    this._pointer = -1;\n  }\n\n  /**\n   * Replace all states.\n   */\n  public replace(newStates: IStateItem[]): void {\n    this._states = newStates;\n  }\n\n  /**\n   * Get state by index.\n   */\n  public get(index: number): IStateItem {\n    return this._states[index];\n  }\n\n  /**\n   * Set state by index.\n   */\n  public set(i: number, state: IStateItem) {\n    return (this._states[i] = state);\n  }\n\n  /**\n   * Get the current state.\n   */\n  get current(): IStateItem {\n    return this._states[this._pointer];\n  }\n\n  /**\n   * Get the previous state.\n   */\n  get previous(): IStateItem | null {\n    return this._pointer < 1 ? null : this._states[this._pointer - 1];\n  }\n\n  /**\n   * Get the state size.\n   */\n  get size(): number {\n    return this._states.length;\n  }\n\n  /**\n   * Get the history action: push vs replace\n   */\n  private _getAction(trigger: Trigger): HistoryAction {\n    let action: HistoryAction = 'push';\n\n    // Manage `data-barba-history` attribute\n    // to get the right action (push vs replace).\n    const el = trigger as HTMLAnchorElement;\n    const attr = `${schemaAttribute.prefix}-${schemaAttribute.history}`;\n\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      action = el.getAttribute(attr) as HistoryAction;\n    }\n\n    return action;\n  }\n\n  /**\n   * Get the direction of popstate change\n   */\n  private _getDirection(diff: number): Trigger {\n    // Check if \"session switch\"\n    if (Math.abs(diff) > 1) {\n      // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\n      return diff > 0 ? 'forward' : 'back';\n    } else {\n      if (diff === 0) {\n        return 'popstate';\n      } else {\n        // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\n        return diff > 0 ? 'back' : 'forward';\n      }\n    }\n  }\n}\n\nconst history = new History();\n\nexport { history };\n", "/**\n * @barba/core/utils/helpers\n * <br><br>\n * ## Helpers\n *\n * - Update next page data\n *\n * @module core/utils/helpers\n * @preferred\n */\n\n/***/\n\n// Third-party\nimport { pathToRegexp as ptr } from 'path-to-regexp';\n// Definitions\nimport { IResponse, ITransitionData } from '../defs';\n// Utils\nimport { dom } from './dom';\nimport { history } from './history';\n\n/**\n * Update `data.next`, the title and the history\n */\nexport const update = async (\n  page: Promise<IResponse | void>,\n  data: ITransitionData\n): Promise<void> => {\n  // If not already updated\n  if (!data.next.html) {\n    const response = await page;\n    const { next } = data;\n\n    if (response) {\n      // see: https://github.com/barbajs/barba/issues/362\n      // const nextDocument = dom.toDocument(html);\n      const nextDocument = dom.toElement(response.html);\n\n      next.namespace = dom.getNamespace(nextDocument);\n      next.container = dom.getContainer(nextDocument);\n      // see https://github.com/barbajs/barba/issues/362\n      // next.html = dom.getHtml(nextDocument);\n      // next.html = nextDocument.innerHTML;\n      next.url = response.url;\n      next.html = response.html;\n\n      // Update history namespace (not available when initially set)\n      history.update({ ns: next.namespace });\n\n      // Update title.\n      const { title } = dom.toDocument(response.html);\n\n      document.title = title;\n    }\n  }\n};\n\n/**\n * Next tick\n */\nexport const nextTick = () =>\n  new Promise(resolve => {\n    window.requestAnimationFrame(resolve);\n    // DEV: same result?\n    // setTimeout(resolve, 0);\n  });\n\n/**\n * Turn a route string such as `/user/:name` into a regular expression.\n *\n * Used for:\n *\n * - routes to ignore\n * - route transition resolution\n *\n * @see https://www.npmjs.com/package/path-to-regexp\n */\nconst pathToRegexp = ptr;\n\nexport { pathToRegexp };\n", "/**\n * @barba/core/utils/url\n * <br><br>\n * ## URL utils.\n *\n * - Collect and structure informations from URLs\n *\n * @module core/utils/url\n */\n\n/***/\n\n// Definitions\nimport { IGenericObject, IUrlBase } from '../defs';\n\n/**\n * Get location href.\n */\nexport const getHref = () => window.location.href;\n\n/**\n * Get absolute href from URL.\n */\nexport const getAbsoluteHref = (url: string, base: string = document.baseURI): string => new URL(url, base).href;\n\n/**\n * Get location origin.\n */\nexport const getOrigin = () => window.location.origin;\n\n/**\n * Get port based on URL or location.\n */\nexport const getPort = (url: string = window.location.href) => parse(url).port;\n\n/**\n * Get path from URL.\n */\nexport const getPath = (url: string = window.location.href) => parse(url).path;\n\n/**\n * Get query object from URL.\n */\nexport const getQuery = (url: string, stringify: boolean = false): IGenericObject|string => {\n  return stringify ? JSON.stringify(parse(url).query) : parse(url).query;\n};\n\n/**\n * Get hash from URL.\n */\nexport const getHash = (url: string): string => parse(url).hash;\n\n/**\n * Parse URL for path, query and hash and more.\n */\nexport const parse = (url: string): IUrlBase => {\n  // Port\n  let port;\n  const matches = url.match(/:\\d+/);\n\n  if (matches === null) {\n    if (/^http/.test(url)) {\n      port = 80;\n    }\n\n    if (/^https/.test(url)) {\n      port = 443;\n    }\n  } else {\n    const portString = matches[0].substring(1);\n\n    port = parseInt(portString, 10);\n  }\n\n  // Path\n  let path = url.replace(getOrigin(), '');\n  let hash;\n  let query = {};\n\n  // Hash\n  const hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex + 1);\n    path = path.slice(0, hashIndex);\n  }\n\n  // Query\n  const queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = parseQuery(path.slice(queryIndex + 1));\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    hash,\n    path,\n    port,\n    query,\n  };\n};\n\n/**\n * Parse a query string to object.\n */\nexport const parseQuery = (str: string) =>\n  str.split('&').reduce((acc: IGenericObject, el: string) => {\n    const [key, value] = el.split('=');\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/**\n * Clean URL, remove \"hash\" and/or \"trailing slash\".\n */\nexport const clean = (url: string = window.location.href) =>\n  url.replace(/(\\/#.*|\\/|#.*)$/, '');\n", "/**\n * @barba/core/utils/request\n * <br><br>\n * ## Fetch pages for transitions.\n *\n * - Includes timeout\n * - Uses Fetch API\n * - Handles errors\n *\n * @module core/utils/request\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { Cache } from '@barba/core/src/modules/Cache';\nimport { Headers } from '@barba/core/src/modules/Headers';\nimport { IResponse, RequestError } from '../defs';\nimport { parse } from './url';\n\n/**\n * Init a page request.\n * Fetch the page and returns a promise with the text content.\n */\nfunction request(\n  url: string,\n  ttl: number = 2e3,\n  requestError: RequestError,\n  cache: Cache,\n  headers: Headers\n): Promise<IResponse> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          /* istanbul ignore next: bypass jest since xhr-mock doesn't support custom xhr.responseURL */\n          const responseURL = xhr.responseURL !== '' && xhr.responseURL !== url ? xhr.responseURL : url;\n\n          resolve({\n            html: xhr.responseText,\n            url: {\n              href: responseURL,\n              ...parse(responseURL)\n            },\n          });\n\n          cache.update(url, {\n            status: 'fulfilled',\n            target: responseURL\n          });\n        } else if (xhr.status) {\n          // HTTP code is not 200, reject with response.\n          const response = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n          };\n\n          requestError(url, response);\n          reject(response);\n\n          cache.update(url, { status: 'rejected' });\n        }\n      }\n    };\n\n    xhr.ontimeout = () => {\n      const error = new Error(`Timeout error [${ttl}]`);\n      requestError(url, error);\n      reject(error);\n      cache.update(url, { status: 'rejected' });\n    };\n\n    xhr.onerror = () => {\n      const error = new Error(`Fetch error`);\n      requestError(url, error);\n      reject(error);\n      cache.update(url, { status: 'rejected' });\n    };\n\n    xhr.open('GET', url);\n    xhr.timeout = ttl;\n    xhr.setRequestHeader(\n      'Accept',\n      'text/html,application/xhtml+xml,application/xml'\n    );\n    xhr.setRequestHeader('x-barba', 'yes');\n\n    headers.all().forEach((value, key) => {\n      xhr.setRequestHeader(key, value);\n    });\n\n    xhr.send();\n  });\n}\n\nexport { request };\n", "export default function isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n", "import isPromise from 'is-promise';\n\n// https://github.com/SBoudrias/run-async\n/* istanbul ignore next */\nexport function runAsync(\n  func: (...args: any[]) => void | Promise<any>,\n  ctx: any = {}\n): (...args: any[]) => Promise<any> {\n  return (...args: any[]) => {\n    let async = false;\n\n    const promise = new Promise((resolve, reject) => {\n      // Add async to context\n      ctx.async = () => {\n        async = true;\n\n        return (err: any, value: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(value);\n          }\n        };\n      };\n\n      const answer = func.apply(ctx, args as []);\n\n      if (!async) {\n        if (isPromise(answer)) {\n          (answer as Promise<any>).then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    return promise;\n  };\n}\n", "/**\n * @barba/core/modules/hooks\n * <br><br>\n * ## Hooks manager.\n *\n * - Register and trigger hooks\n *\n * Hooks can be easily registered:\n *\n * ```js\n * hooks.leave(callback, context);\n * ```\n *\n * @module core/modules/hooks\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HookFunction, HookMethods, HooksAll } from './defs';\n// Modules\nimport { Logger } from './modules/Logger';\n// Utils\nimport { runAsync } from './utils';\n// Types\ninterface IHookInfos {\n  ctx: any;\n  fn: HookFunction;\n}\n\nexport class Hooks extends HookMethods {\n  /**\n   * Allow the use of `hooks[name](cb, ctx)`.\n   */\n  [key: string]: any;\n  // [key in HooksAll]?: any;\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All available hooks.\n   *\n   * See [[HooksAll]]\n   */\n  // TODO: get hooks from defs (DRY)?\n  public all: HooksAll[] = [\n    'ready',\n    'page',\n    'reset',\n    'currentAdded',\n    'currentRemoved',\n    'nextAdded',\n    'nextRemoved',\n    'beforeOnce',\n    'once',\n    'afterOnce',\n    'before',\n    'beforeLeave',\n    'leave',\n    'afterLeave',\n    'beforeEnter',\n    'enter',\n    'afterEnter',\n    'after',\n  ];\n  /**\n   * Registered hooks.\n   *\n   * - Unique hook name\n   * - Associated data set(s) (callback + context)\n   */\n  public registered: Map<HooksAll, Set<IHookInfos>> = new Map();\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  public init() {\n    this.registered.clear();\n    this.all.forEach(hook => {\n      if (!this[hook]) {\n        this[hook] = (fn: HookFunction, ctx?: any) => {\n          if (!this.registered.has(hook)) {\n            this.registered.set(hook, new Set());\n          }\n          const set = this.registered.get(hook);\n\n          set.add({\n            ctx: ctx || {},\n            fn,\n          });\n        };\n      }\n    });\n  }\n\n  /**\n   * Do hook.\n   *\n   * Trigger registered hooks.\n   */\n  public do(name: HooksAll, ...args: any): Promise<any> {\n    if (this.registered.has(name)) {\n      // Let's start a chain of promises\n      let chain = Promise.resolve();\n\n      this.registered.get(name).forEach(hook => {\n        // Chain async hooks promisified\n        chain = chain.then(() => runAsync(hook.fn, hook.ctx)(...args));\n      });\n\n      return chain.catch(error => {\n        this.logger.debug(`Hook error [${name}]`);\n        this.logger.error(error);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  public clear(): void {\n    this.all.forEach(hook => {\n      delete this[hook];\n    });\n\n    this.init();\n  }\n\n  /**\n   * Help, print available and registered hooks.\n   */\n  public help(): void {\n    this.logger.info(`Available hooks: ${this.all.join(',')}`);\n    const registered: string[] = [];\n    this.registered.forEach((_value: any, key: string) => registered.push(key));\n    this.logger.info(`Registered hooks: ${registered.join(',')}`);\n  }\n}\n\nconst hooks = new Hooks();\n\nexport { hooks };\n", "/**\n * @barba/core/modules/ignore\n * <br><br>\n * ## Manage ignore options.\n *\n * - cache\n * - prefetch\n *\n * @module core/modules/ignore\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption } from '../defs';\n// Utils\nimport { pathToRegexp } from '../utils/helpers';\nimport { parse } from '../utils/url';\n\nexport class Ignore {\n  private _ignoreAll: boolean;\n  private _ignoreRegexes: RegExp[] = [];\n\n  constructor(ignore: IgnoreOption) {\n    if (typeof ignore === 'boolean') {\n      this._ignoreAll = ignore;\n    } else {\n      const paths = Array.isArray(ignore) ? ignore : [ignore];\n\n      this._ignoreRegexes = paths.map(p => pathToRegexp(p));\n    }\n  }\n\n  public checkHref(href: string): boolean {\n    if (typeof this._ignoreAll === 'boolean') {\n      return this._ignoreAll;\n    }\n\n    const { path } = parse(href);\n\n    return this._ignoreRegexes.some(regex => regex.exec(path) !== null);\n  }\n}\n", "/**\n * @barba/core/modules/cache\n * <br><br>\n * ## Cache for storing URL / HTML.\n *\n * @module core/modules/cache\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { CacheAction, CacheRequest, CacheStatus, CacheTarget, ICacheData, IgnoreOption } from '../defs';\n// Modules\nimport { Ignore } from './Ignore';\n\nexport class Cache extends Ignore {\n  private _state: Map<string, ICacheData> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n  }\n\n  /**\n   * Set value to cache\n   */\n  public set(\n    href: string,\n    request: CacheRequest,\n    action: CacheAction,\n    status: CacheStatus,\n    target?: CacheTarget,\n  ): ICacheData {\n    this._state.set(href, {\n      action,\n      request,\n      status,\n      target: target ?? href,\n    });\n\n    return {\n      action,\n      request,\n      status,\n      target,\n    };\n  }\n\n  /**\n   * Get data from cache\n   */\n  public get(href: string): ICacheData {\n    return this._state.get(href);\n  }\n\n  /**\n   * Get request from cache\n   */\n  public getRequest(href: string): CacheRequest {\n    return this._state.get(href).request;\n  }\n\n  /**\n   * Get action from cache\n   */\n  public getAction(href: string): CacheAction {\n    return this._state.get(href).action;\n  }\n\n  /**\n   * Get status from cache\n   */\n  public getStatus(href: string): CacheStatus {\n    return this._state.get(href).status;\n  }\n\n  /**\n   * Get target from cache\n   */\n  public getTarget(href: string): CacheTarget {\n    return this._state.get(href).target;\n  }\n\n  /**\n   * Check if value exists into cache\n   */\n  public has(href: string): boolean {\n    /* istanbul ignore else */\n    if (this.checkHref(href)) {\n      return false;\n    }\n    return this._state.has(href);\n  }\n\n  /**\n   * Delete value from cache\n   */\n  public delete(href: string): boolean {\n    return this._state.delete(href);\n  }\n\n  /**\n   * Update cache value\n   */\n  public update(href: string, data: ICacheData): ICacheData {\n    const state = {\n      ...this._state.get(href),\n      ...data,\n    };\n    this._state.set(href, state);\n\n    return state;\n  }\n}\n", "/**\n * @barba/core/modules/headers\n * <br><br>\n * ## Manage request Headers.\n *\n * @module core/modules/headers\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HeaderList, IHeaderData } from '../defs';\n\nexport class Headers {\n  private _list: HeaderList = new Map();\n\n  /**\n   * Set a new header\n   */\n  public set(name: string, value: string): IHeaderData {\n    this._list.set(name, value);\n\n    return {\n      name: value\n    };\n  }\n\n  /**\n   * Get a specific header\n   */\n  public get(name: string): string {\n    return this._list.get(name);\n  }\n\n  /**\n   * Get all headers\n   */\n  public all(): HeaderList {\n    return this._list;\n  }\n\n  /**\n   * Check if header exists\n   */\n  public has(name: string): boolean {\n    return this._list.has(name);\n  }\n\n  /**\n   * Delete a header\n   */\n  public delete(name: string): boolean {\n    return this._list.delete(name);\n  }\n\n  /**\n   * Clear all headers\n   */\n  public clear(): void {\n    return this._list.clear();\n  }\n}\n", "/**\n * @barba/core/modules/prevent\n * <br><br>\n * ## Prevent checks.\n *\n * - Gathers all the tests that allow Barba to work and play transitions\n *\n * @module core/modules/prevent\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption, Link, PreventCheck } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n// Utils\nimport { url } from '../utils';\n// Modules\nimport { Ignore } from './Ignore';\n\n/**\n * Make sure the browser supports `history.pushState`.\n */\nconst pushState: PreventCheck = () => !window.history.pushState;\n\n/**\n * Make sure there is an `el` and `href`.\n */\nconst exists: PreventCheck = ({ el, href }) => !el || !href;\n\n/**\n * If the user is pressing ctrl + click, the browser will open a new tab.\n */\nconst newTab: PreventCheck = ({ event }) =>\n  (event as KeyboardEvent).which > 1 ||\n  (event as KeyboardEvent).metaKey ||\n  (event as KeyboardEvent).ctrlKey ||\n  (event as KeyboardEvent).shiftKey ||\n  (event as KeyboardEvent).altKey;\n\n/**\n * If the link has `_blank` target.\n */\nconst blank: PreventCheck = ({ el }) =>\n  el.hasAttribute('target') && (el as Link).target === '_blank';\n\n/**\n * If the domain is the same (in order to avoid pushState cross origin security problem).\n * Note: SVGAElement do not have `protocol` neither `hostname` properties.\n */\nconst corsDomain: PreventCheck = ({ el }) =>\n  ((el as HTMLAnchorElement).protocol !== undefined &&\n    window.location.protocol !== (el as HTMLAnchorElement).protocol) ||\n  ((el as HTMLAnchorElement).hostname !== undefined &&\n    window.location.hostname !== (el as HTMLAnchorElement).hostname);\n\n/**\n * If the port is the same.\n * Note: SVGAElement do not have `port` property.\n */\nconst corsPort: PreventCheck = ({ el }) =>\n  (el as HTMLAnchorElement).port !== undefined &&\n  url.getPort() !== url.getPort((el as HTMLAnchorElement).href);\n\n/**\n * If the link has download attribute.\n */\nconst download: PreventCheck = ({ el }) =>\n  el.getAttribute && typeof el.getAttribute('download') === 'string';\n\n/**\n * If the links contains [data-barba-prevent] or [data-barba-prevent=\"self\"].\n */\nconst preventSelf: PreventCheck = ({ el }) =>\n  el.hasAttribute(`${schemaAttribute.prefix}-${schemaAttribute.prevent}`);\n\n/**\n * If some link ancestor contains [data-barba-prevent=\"all\"].\n */\nconst preventAll: PreventCheck = ({ el }) =>\n  Boolean(\n    el.closest(`[${schemaAttribute.prefix}-${schemaAttribute.prevent}=\"all\"]`)\n  );\n\n/**\n * If the link is the current URL.\n *\n * > Not in the test suite.\n */\nconst sameUrl: PreventCheck = ({ href }) =>\n  url.clean(href) === url.clean() && url.getPort(href) === url.getPort();\n\nexport class Prevent extends Ignore {\n  public suite: string[] = [];\n  public tests: Map<string, PreventCheck> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n    this.init();\n  }\n\n  public init(): void {\n    // Add defaults\n    this.add('pushState', pushState);\n    this.add('exists', exists);\n    this.add('newTab', newTab);\n    this.add('blank', blank);\n    this.add('corsDomain', corsDomain);\n    this.add('corsPort', corsPort);\n    this.add('download', download);\n    this.add('preventSelf', preventSelf);\n    this.add('preventAll', preventAll);\n\n    // Outside of the test suite\n    this.add('sameUrl', sameUrl, false);\n  }\n\n  public add(name: string, check: PreventCheck, suite: boolean = true): void {\n    this.tests.set(name, check);\n    suite && this.suite.push(name);\n  }\n\n  /**\n   * Run individual test\n   */\n  public run(name: string, el: Link, event: Event, href: string): boolean {\n    return this.tests.get(name)({\n      el,\n      event,\n      href,\n    });\n  }\n\n  /**\n   * Run test suite\n   */\n  public checkLink(el: Link, event: Event, href: string): boolean {\n    return this.suite.some(name => this.run(name, el, event, href));\n  }\n}\n", "// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class BarbaError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    public error: Error,\n    public label = 'Barba error',\n    ...params: any[]\n  ) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    /* istanbul ignore else */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BarbaError);\n    }\n\n    this.name = 'BarbaError';\n  }\n}\n", "/**\n * @barba/core/modules/store\n * <br><br>\n * ## Transitions store.\n *\n * - Resolve transition\n * - Manage rules\n *\n * @module core/modules/store\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IRule,\n  IRules,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  RuleName,\n} from '../defs';\n\n// Modules\nimport { Logger } from './Logger';\n\nexport class Store {\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All registered transitions.\n   */\n  public all: ITransitionPage[] = [];\n  /**\n   * \"Page only\" registered transitions.\n   */\n  public page: ITransitionPage[] = [];\n  /**\n   * \"Once only\" registered transitions.\n   */\n  public once: ITransitionOnce[] = [];\n  /**\n   * Rules for transition resolution.\n   *\n   * Defaults:\n   *\n   * - namespace\n   * - custom\n   */\n  private _rules: IRule[] = [\n    {\n      name: 'namespace',\n      type: 'strings',\n    },\n    {\n      name: 'custom',\n      type: 'function',\n    },\n  ];\n\n  /**\n   * Init store.\n   */\n  constructor(transitions: ITransitionPage[] = []) {\n    /* istanbul ignore else */\n    if (transitions) {\n      // TODO: add check for valid transitions? criteria? (once || enter && leave)\n      this.all = this.all.concat(transitions);\n    }\n    this.update();\n  }\n\n  /**\n   * Add rule or transition.\n   */\n  public add(type: 'rule' | 'transition', data: any): void {\n    switch (type) {\n      case 'rule':\n        // TODO: check for valid rule\n        this._rules.splice(data.position || 0, 0, data.value);\n        break;\n      case 'transition':\n      default:\n        // TODO: check for valid transition\n        this.all.push(data);\n        break;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Resolve transition.\n   */\n  public resolve(\n    data: ITransitionData,\n    filters: ITransitionFilters = {}\n  ): ITransitionOnce | ITransitionPage {\n    // Filter on \"once\"\n    let transitions = filters.once ? this.once : this.page;\n\n    // Filter on \"self\"\n    if (filters.self) {\n      transitions = transitions.filter(t => t.name && t.name === 'self');\n    } else {\n      transitions = transitions.filter(t => !t.name || t.name !== 'self');\n    }\n\n    // All matching transition infos\n    const matching = new Map();\n\n    // Active = first of valid transitions\n    // sorted by directions (from/to, from || to, …)\n    const active = transitions.find(t => {\n      let valid = true;\n      const match = {};\n\n      if (filters.self && t.name === 'self') {\n        matching.set(t, match);\n        return true;\n      }\n\n      // Check rules\n      this._rules.reverse().forEach(rule => {\n        if (valid) {\n          valid = this._check(t, rule, data, match);\n          // From/to check\n          if (t.from && t.to) {\n            valid =\n              this._check(t, rule, data, match, 'from') &&\n              this._check(t, rule, data, match, 'to');\n          }\n          if (t.from && !t.to) {\n            valid = this._check(t, rule, data, match, 'from');\n          }\n          if (!t.from && t.to) {\n            valid = this._check(t, rule, data, match, 'to');\n          }\n        }\n      });\n\n      matching.set(t, match);\n\n      return valid;\n    });\n\n    const activeMatch = matching.get(active);\n    const transitionType = [];\n    if (filters.once) {\n      transitionType.push('once');\n    } else {\n      transitionType.push('page');\n    }\n    if (filters.self) {\n      transitionType.push('self');\n    }\n\n    if (activeMatch) {\n      // Log resolved transition\n      const infos: any[] = [active];\n      // Log if matching criteria\n      Object.keys(activeMatch).length > 0 && infos.push(activeMatch);\n\n      this.logger.info(\n        `Transition found [${transitionType.join(',')}]`,\n        ...infos\n      );\n    } else {\n      this.logger.info(`No transition found [${transitionType.join(',')}]`);\n    }\n\n    return active;\n  }\n\n  /**\n   * ### Update store.\n   *\n   * - Reorder transition by priorities\n   * - Get wait indicator\n   * - Get once transitions\n   */\n  public update(): void {\n    // Reorder by priorities\n    this.all = this.all\n      .map(t => this._addPriority(t))\n      .sort((a, b) => a.priority - b.priority)\n      .reverse()\n      .map(t => {\n        delete t.priority;\n\n        return t;\n      });\n    this.page = this.all.filter(\n      t => t.leave !== undefined || t.enter !== undefined\n    ) as ITransitionPage[];\n    this.once = this.all.filter(t => t.once !== undefined) as ITransitionOnce[];\n  }\n\n  /**\n   * ### Check if transition apply.\n   *\n   * Based on rule, page data and optional direction:\n   *\n   * 1. transition has no rule \"property\":\n   *    - always returns true\n   * 2. transition has rule \"property\":\n   *     - \"strings\" should be present on both side (transition + page) and match\n   *     - \"function\" should return true\n   */\n  private _check(\n    transition: ITransitionPage,\n    rule: IRule,\n    data: ITransitionData,\n    match: any,\n    direction?: 'from' | 'to'\n  ): boolean {\n    let isValid = true;\n    let hasMatch = false;\n    const t = transition;\n    const { name, type } = rule;\n    const strRule = name as IRules['strings'];\n    const objRule = name as IRules['object'];\n    const fnName = name as IRules['function'];\n    const base = direction ? t[direction] : t; // = t || t.from || t.to\n    const page = direction === 'to' ? data.next : data.current; // = current || next\n    const exist = direction ? base && base[name] : base[name];\n\n    // If transition rule exists\n    if (exist) {\n      switch (type) {\n        case 'strings':\n        default: {\n          // Array support\n          const names: string[] = Array.isArray(base[strRule])\n            ? (base[strRule] as string[])\n            : [base[strRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[strRule] && names.indexOf(page[strRule]) !== -1) {\n            hasMatch = true;\n          }\n          // If transition prop is different from current, not valid\n          if (names.indexOf(page[strRule]) === -1) {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'object': {\n          // Array support\n          const names: string[] = Array.isArray(base[objRule])\n            ? (base[objRule] as string[])\n            : [base[objRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[objRule]) {\n            if (\n              page[objRule].name &&\n              names.indexOf(page[objRule].name) !== -1\n            ) {\n              hasMatch = true;\n            }\n            // If transition prop is different from current, not valid\n            if (names.indexOf(page[objRule].name) === -1) {\n              isValid = false;\n            }\n          } else {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'function':\n          if (base[fnName](data)) {\n            hasMatch = true;\n          } else {\n            isValid = false;\n          }\n          break;\n      }\n\n      if (hasMatch) {\n        if (direction) {\n          match[direction] = match[direction] || {};\n          match[direction][name] = t[direction][name];\n        } else {\n          match[name] = t[name];\n        }\n      }\n    }\n\n    return isValid;\n  }\n\n  /**\n   * ### Calculate transition priority.\n   *\n   * Based on:\n   *\n   * - rule \"position\" (index) give tens, hundreds, thousands, …\n   * - from/to properties give units (0, 1 or 2)\n   */\n  private _calculatePriority(\n    t: ITransitionPage,\n    ruleName: RuleName,\n    ruleIndex: number\n  ): number {\n    let priority = 0;\n\n    if (\n      t[ruleName] ||\n      (t.from && t.from[ruleName]) ||\n      (t.to && t.to[ruleName])\n    ) {\n      priority += Math.pow(10, ruleIndex);\n\n      if (t.from && t.from[ruleName]) {\n        priority += 1;\n      }\n      if (t.to && t.to[ruleName]) {\n        priority += 2;\n      }\n    }\n\n    return priority;\n  }\n\n  private _addPriority(t: ITransitionPage): ITransitionPage {\n    t.priority = 0;\n    let priority = 0;\n\n    this._rules.forEach((rule, i) => {\n      const { name } = rule;\n      const index = i + 1;\n\n      priority += this._calculatePriority(t, name, index);\n    });\n\n    t.priority = priority;\n\n    return t;\n  }\n}\n", "/**\n * @barba/core/modules/transitions\n * <br><br>\n * ## Transitions manager.\n *\n * - Handle hooks and transition lifecycle\n *\n * @module core/modules/transitions\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  HooksTransition,\n  HooksTransitionMap,\n  IResponse,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  Wrapper,\n} from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { dom, helpers, runAsync } from '../utils';\n// Modules\nimport { BarbaError } from './Error';\nimport { Logger } from './Logger';\nimport { Store } from './Store';\n\nexport class Transitions {\n  public logger: Logger = new Logger('@barba/core');\n  public store: Store;\n  private _running: boolean = false;\n\n  constructor(transitions: ITransitionPage[] = []) {\n    this.store = new Store(transitions);\n  }\n\n  /**\n   * Get resolved transition\n   *\n   * - based on data\n   */\n  public get(\n    data: ITransitionData,\n    filters?: ITransitionFilters\n  ): ITransitionOnce | ITransitionPage {\n    return this.store.resolve(data, filters);\n  }\n\n  /**\n   * Animation running status.\n   */\n  get isRunning(): boolean {\n    return this._running;\n  }\n  set isRunning(status: boolean) {\n    this._running = status;\n  }\n\n  /**\n   * Check for registered once transition(s).\n   */\n  get hasOnce(): boolean {\n    return this.store.once.length > 0;\n  }\n\n  /**\n   * Check for registered self transition.\n   */\n  get hasSelf(): boolean {\n    return this.store.all.some(t => t.name === 'self');\n  }\n\n  /**\n   * ### Wait indicator.\n   *\n   * Tells Barba to get next page data<br>\n   * before starting the resolution<br>\n   * because some registered transitions need<br>\n   * next page data to be resolved (eg: `sync: true`, `to: { namespace }`, …)\n   */\n  get shouldWait(): boolean {\n    return this.store.all.some(t => (t.to && !t.to.route) || t.sync);\n  }\n\n  /**\n   * ### Do \"once\" transition.\n   *\n   * Hooks: see [[HooksOnce]].\n   */\n  public async doOnce({\n    data,\n    transition,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionOnce;\n  }) {\n    const t = transition || {};\n    this._running = true;\n\n    try {\n      await this._doAsyncHook('beforeOnce', data, t);\n      await this.once(data, t);\n      await this._doAsyncHook('afterOnce', data, t);\n    } catch (error) {\n      this._running = false;\n\n      this.logger.debug('Transition error [before/after/once]');\n      this.logger.error(error);\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * ### Do \"page\" transition.\n   *\n   * Hooks: see [[HooksPage]].\n   *\n   * `sync: false` (default) order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. leave\n   * 4. afterLeave\n   * 5. beforeEnter\n   * 6. enter\n   * 7. afterEnter\n   * 8. after\n   *\n   * `sync: true` order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. beforeEnter\n   * 4. leave & enter\n   * 5. afterLeave\n   * 6. afterEnter\n   * 7. after\n   */\n  public async doPage({\n    data,\n    transition,\n    page,\n    wrapper,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionPage;\n    page: Promise<IResponse | void>;\n    wrapper: Wrapper;\n  }) {\n    const t = transition || {};\n    const sync = t.sync === true || false;\n\n    this._running = true;\n\n    try {\n      // Check sync mode, wait for next content\n      if (sync) {\n        await helpers.update(page, data);\n      }\n\n      await this._doAsyncHook('before', data, t);\n\n      if (sync) {\n        try {\n          await this.add(data, wrapper);\n          // Before actions\n          await this._doAsyncHook('beforeLeave', data, t);\n          await this._doAsyncHook('beforeEnter', data, t);\n\n          // Actions\n          await Promise.all([this.leave(data, t), this.enter(data, t)]);\n\n          // After actions\n          await this._doAsyncHook('afterLeave', data, t);\n          await this._doAsyncHook('afterEnter', data, t);\n        } catch (error) {\n          // this.logger.debug('Transition error [sync]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              (error as Error),\n              'Transition error [sync]'\n            );\n          }\n        }\n      } else {\n        let leaveResult: any = false;\n\n        try {\n          // Leave\n          await this._doAsyncHook('beforeLeave', data, t);\n\n          leaveResult = await Promise.all([\n            this.leave(data, t),\n            helpers.update(page, data),\n          ]).then(values => values[0]);\n\n          await this._doAsyncHook('afterLeave', data, t);\n\n          // TODO: check here \"valid\" page result\n          // before going further\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/leave]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              (error as Error),\n              'Transition error [before/after/leave]'\n            );\n          }\n        }\n\n        try {\n          // Enter\n          /* istanbul ignore else */\n          if (leaveResult !== false) {\n            await this.add(data, wrapper);\n\n            await this._doAsyncHook('beforeEnter', data, t);\n            await this.enter(data, t, leaveResult);\n            await this._doAsyncHook('afterEnter', data, t);\n          }\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/enter]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              (error as Error),\n              'Transition error [before/after/enter]'\n            );\n          }\n        }\n      }\n\n      // Remove current container\n      await this.remove(data);\n\n      await this._doAsyncHook('after', data, t);\n    } catch (error: any) {\n      this._running = false;\n\n      // If \"custom/specific\" barba error.\n      /* istanbul ignore else */\n      if (error.name && error.name === 'BarbaError') {\n        this.logger.debug(error.label);\n        this.logger.error(error.error);\n\n        throw error;\n      }\n\n      this.logger.debug('Transition error [page]');\n      this.logger.error(error);\n\n      throw error;\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * Once hook + async \"once\" transition.\n   */\n  public async once(data: ITransitionData, t: ITransitionOnce): Promise<void> {\n    await hooks.do('once', data, t);\n\n    return t.once ? runAsync(t.once, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Leave hook + async \"leave\" transition.\n   */\n  public async leave(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await hooks.do('leave', data, t);\n\n    return t.leave ? runAsync(t.leave, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Enter hook + async \"enter\" transition.\n   */\n  public async enter(\n    data: ITransitionData,\n    t: ITransitionPage,\n    leaveResult?: any\n  ): Promise<void> {\n    await hooks.do('enter', data, t);\n\n    return t.enter\n      ? runAsync(t.enter, t)(data, leaveResult)\n      : Promise.resolve();\n  }\n\n  /**\n   * Add next container.\n   */\n  public async add(data: ITransitionData, wrapper: Wrapper): Promise<void> {\n    dom.addContainer(data.next.container, wrapper);\n    hooks.do('nextAdded', data);\n  }\n\n  /**\n   * Remove current container.\n   */\n  public async remove(data: ITransitionData): Promise<void> {\n    dom.removeContainer(data.current.container);\n    hooks.do('currentRemoved', data);\n  }\n\n  private _isTransitionError(error: any) {\n    if (error.message) {\n      // Errors from request\n      return !/Timeout error|Fetch error/.test(error.message);\n    }\n\n    if (error.status) {\n      // Errors from request\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Do hooks + async transition methods.\n   */\n  private async _doAsyncHook(\n    hook: HooksTransition,\n    data: ITransitionData,\n    t: HooksTransitionMap\n  ): Promise<void> {\n    await hooks.do(hook, data, t);\n\n    return t[hook] ? runAsync(t[hook], t)(data) : Promise.resolve();\n  }\n}\n", "/**\n * @barba/core/modules/views\n * <br><br>\n * ## Views manager.\n *\n * @module core/modules/views\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HooksView, IView, IViewData } from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { runAsync } from '../utils';\n// Types\ntype Hook = (data: IViewData) => Promise<void>;\n\nexport class Views {\n  /**\n   * Available hook names for views.\n   */\n  public names: HooksView[] = [\n    'beforeLeave',\n    'afterLeave',\n    'beforeEnter',\n    'afterEnter',\n  ];\n  /**\n   * Registered views by namespace.\n   */\n  public byNamespace: Map<string, IView> = new Map();\n\n  /**\n   * Init views.\n   */\n  constructor(views: IView[]) {\n    if (views.length === 0) {\n      return;\n    }\n\n    // TODO: add check\n    // for valid views? criteria? (namespace property, string ?)\n    // or duplicate\n    views.forEach(view => {\n      this.byNamespace.set(view.namespace, view);\n    });\n\n    this.names.forEach(name => {\n      hooks[name](this._createHook(name));\n    });\n  }\n\n  /**\n   * Create the hook method.\n   *\n   * - get view based on namespace\n   * - execute callback with transition data\n   */\n  private _createHook(name: HooksView): Hook {\n    return data => {\n      const { namespace } = name.match(/enter/i) ? data.next : data.current;\n      const view = this.byNamespace.get(namespace);\n\n      // TODO: manage self…\n      // if (view && data.trigger !== 'self') {\n      if (view && view[name]) {\n        return runAsync(view[name], view)(data);\n      }\n\n      return Promise.resolve();\n    };\n  }\n}\n", "// Element.prototype.matches polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    (Element as any).prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Element.prototype.closest polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s: string) {\n    let el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = (el.parentElement || el.parentNode) as Element;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n", "/**\n * @module core/schemas\n */\n\n// Definitions\nimport { ISchemaPage } from '../defs';\n\n/**\n * See [[ISchemaPage]]\n */\nexport const schemaPage: ISchemaPage = {\n  container: null,\n  html: '',\n  namespace: '',\n  url: {\n    hash: '',\n    href: '',\n    path: '',\n    port: null,\n    query: {},\n  },\n};\n", "/**\n * @barba/core\n * <br><br>\n * ## Barba core object\n *\n * Main methods:\n *\n * - `.init()` for initialization with options\n * - `.use()` for plugins\n *\n * @module core\n */\n\n/***/\n\nimport { version } from '../package.json';\n// Definitions\nimport {\n  IBarbaOptions,\n  IBarbaPlugin,\n  IgnoreOption,\n  ISchemaPage,\n  ITransitionData,\n  ITransitionOnce,\n  ITransitionPage,\n  Link,\n  LinkEvent,\n  RequestCustomError,\n  RequestErrorOrResponse,\n  SchemaAttributeValues,\n  Trigger,\n  Wrapper,\n} from './defs';\n// Hooks\nimport { hooks } from './hooks';\n// Modules\nimport { Cache } from './modules/Cache';\nimport { Headers } from './modules/Headers';\nimport { Logger } from './modules/Logger';\nimport { Prevent } from './modules/Prevent';\nimport { Transitions } from './modules/Transitions';\nimport { Views } from './modules/Views';\n// Polyfills\nimport './polyfills';\n// Schemas\nimport { schemaAttribute } from './schemas/attribute';\nimport { schemaPage } from './schemas/page';\n// Utils\nimport { dom, helpers, history, request, url } from './utils';\n\nexport class Core {\n  /**\n   * Version.\n   */\n  public version: string = version;\n  /**\n   * Schemas.\n   */\n  public schemaPage: ISchemaPage = schemaPage;\n  /**\n   * Logger class, allows plugins to create Logger.\n   */\n  public Logger: typeof Logger = Logger;\n  /**\n   * Barba logger.\n   */\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * Plugins.\n   */\n  public plugins: IBarbaPlugin<any>[] = [];\n  /**\n   * Options\n   */\n  public timeout: number;\n  public cacheIgnore: IgnoreOption;\n  public cacheFirstPage: boolean;\n  public prefetchIgnore: IgnoreOption;\n  public preventRunning: boolean;\n  /**\n   * Hooks\n   */\n  public hooks = hooks;\n  /**\n   * Modules.\n   */\n  // public history: History;\n  public cache: Cache;\n  public headers: Headers;\n  public prevent: Prevent;\n  public transitions: Transitions;\n  public views: Views;\n  /**\n   * Utils.\n   */\n  public dom = dom;\n  public helpers = helpers;\n  public history = history;\n  public request = request;\n  public url = url;\n\n  private _data: ITransitionData;\n  private _requestCustomError: RequestCustomError;\n  private _wrapper: Wrapper;\n  private _linkEvent: LinkEvent;\n\n  /**\n   * ### Init plugin with options.\n   *\n   * See [[IBarbaPlugin]] for more details.\n   */\n  public use<T>(plugin: IBarbaPlugin<T>, options?: T): void {\n    const installedPlugins = this.plugins;\n\n    // Plugin installation\n    if (installedPlugins.indexOf(plugin) > -1) {\n      this.logger.warn(`Plugin [${plugin.name}] already installed.`);\n\n      return;\n    }\n\n    if (typeof plugin.install !== 'function') {\n      this.logger.warn(`Plugin [${plugin.name}] has no \"install\" method.`);\n\n      return;\n    }\n\n    plugin.install(this, options);\n    installedPlugins.push(plugin);\n  }\n\n  /**\n   * ### Init barba with options.\n   *\n   * See [[IBarbaOptions]] for more details.\n   *\n   * Default values are:\n   *\n   * - transitions: `[]`\n   * - views: `[]`\n   * - schema: [[SchemaAttribute]]\n   * - timeout: `2e3`\n   * - cacheIgnore: `false`\n   * - cacheFirstPage: `false`\n   * - prefetchIgnore: `false`\n   * - preventRunning: `false`\n   * - prevent: `null`,\n   * - debug: `false`\n   * - logLevel: `'debug'`\n   */\n  public init(\n    /** @ignore */ {\n      transitions = [],\n      views = [],\n      schema = schemaAttribute,\n      requestError,\n      timeout = 2e3,\n      cacheIgnore = false,\n      cacheFirstPage = false,\n      prefetchIgnore = false,\n      /* istanbul ignore next */\n      preventRunning = false,\n      prevent: preventCustom = null,\n      debug = false,\n      logLevel = 'off',\n    }: IBarbaOptions = {}\n  ) {\n    // 0. Set logger level and print version\n    Logger.setLevel(debug === true ? 'debug' : logLevel);\n    this.logger.info(this.version);\n\n    // 1. Manage options\n    Object.keys(schema).forEach(k => {\n      const attr = k as SchemaAttributeValues;\n\n      /* istanbul ignore else */\n      if (schemaAttribute[attr]) {\n        schemaAttribute[attr] = schema[attr];\n      }\n    });\n    this._requestCustomError = requestError;\n    this.timeout = timeout;\n    this.cacheIgnore = cacheIgnore;\n    this.cacheFirstPage = cacheFirstPage;\n    this.prefetchIgnore = prefetchIgnore;\n    this.preventRunning = preventRunning;\n\n    // 2. Get and check wrapper\n    this._wrapper = this.dom.getWrapper();\n    if (!this._wrapper) {\n      throw new Error('[@barba/core] No Barba wrapper found');\n    }\n\n    // 3. Init pages (get \"current\" data)\n    this._resetData();\n\n    const { current } = this.data;\n\n    if (!current.container) {\n      throw new Error('[@barba/core] No Barba container found');\n    }\n\n    // 4. Init other modules\n    this.cache = new Cache(cacheIgnore);\n    this.headers = new Headers();\n    this.prevent = new Prevent(prefetchIgnore);\n    this.transitions = new Transitions(transitions);\n    this.views = new Views(views);\n\n    // Add prevent custom\n    if (preventCustom !== null) {\n      if (typeof preventCustom !== 'function') {\n        throw new Error('[@barba/core] Prevent should be a function');\n      }\n\n      this.prevent.add('preventCustom', preventCustom);\n    }\n\n    // 5. Init history\n    this.history.init(current.url.href, current.namespace);\n\n    // 6. Add to cache\n    if (cacheFirstPage) {\n      this.cache.set(current.url.href, Promise.resolve({\n        html: current.html,\n        url: current.url,\n      }), 'init', 'fulfilled');\n    }\n\n    // 7. Bind context\n    this._onLinkEnter = this._onLinkEnter.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._bind();\n\n    // 8. Init plugins\n    this.plugins.forEach(plugin => plugin.init());\n\n    // 9. Barba ready\n    // Set next + trigger for once and `beforeEnter`/`afterEnter` view on page load.\n    const onceData = this.data;\n\n    onceData.trigger = 'barba';\n    onceData.next = onceData.current;\n    onceData.current = { ...this.schemaPage };\n    this.hooks.do('ready', onceData);\n\n    // 9. Finally, do once…\n    this.once(onceData);\n\n    // Clean data for first barba transition…\n    this._resetData();\n  }\n\n  public destroy(): void {\n    this._resetData();\n    this._unbind();\n    this.history.clear();\n    this.hooks.clear();\n    this.plugins = [];\n  }\n\n  get data(): ITransitionData {\n    return this._data;\n  }\n\n  get wrapper(): HTMLElement {\n    return this._wrapper;\n  }\n\n  /**\n   * ### Force a page change without Barba transition.\n   */\n  public force(href: string): void {\n    // DEV\n    // Can be used waiting animation cancellation management…\n    window.location.assign(href);\n  }\n\n  /**\n   * ### Go for a Barba transition.\n   *\n   * Manage \"self page\" href:\n   *\n   * - if same url and no self transition, keep default behavior\n   *   - link: reload the page\n   *   - anchor: scroll to\n   * - if same url with self transition, use it\n   * - then start a page transition.\n   */\n  public go(\n    href: string,\n    trigger: Trigger = 'barba',\n    e?: LinkEvent | PopStateEvent\n  ): Promise<void> {\n    this._linkEvent = null;\n\n    // If animation running, force reload\n    if (this.transitions.isRunning) {\n      this.force(href);\n\n      return;\n    }\n\n    let self = false;\n\n    // Check prevent sameURL against current history\n    // + state check\n    // + update trigger with direction\n    if (trigger === 'popstate') {\n      self =\n        this.history.current &&\n        this.url.getPath(this.history.current.url) === this.url.getPath(href) &&\n        this.url.getQuery(this.history.current.url, true) === this.url.getQuery(href, true);\n    } else {\n      self = this.prevent.run('sameUrl', null, null, href);\n    }\n\n    if (self && !this.transitions.hasSelf) {\n      return;\n    }\n\n    trigger = this.history.change(this.cache.has(href) ? this.cache.get(href).target : href, trigger, e);\n\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.page(href, trigger, e ?? undefined, self);\n  }\n\n  /**\n   * ### Start an \"once\" transition.\n   *\n   * If some registered \"once\" transition,\n   * get the \"resolved\" transition from the store and start it.\n   */\n  public async once(readyData: ITransitionData): Promise<void> {\n    await this.hooks.do('beforeEnter', readyData);\n\n    // Check if once transition\n    if (this.transitions.hasOnce) {\n      const transition = this.transitions.get(readyData, {\n        once: true,\n      }) as ITransitionOnce;\n\n      await this.transitions.doOnce({ transition, data: readyData });\n    }\n\n    await this.hooks.do('afterEnter', readyData);\n  }\n\n  /**\n   * ### Start a \"page\" transition.\n   *\n   * 1. If no running transition, updates data with full URL properties and trigger.\n   * 2. Get page from cache or init request.\n   * 3. Wait if some transitions need \"next\" data (`sync: true`, `to: …`).\n   * 4. Manage the history, depending on trigger.\n   * 5. Get \"data\" and trigger \"go\" hook.\n   * 6. Get the \"resolved\" transition from the store and start it.\n   * 7. Update title and reset data (current, next = undefined).\n   *\n   * > If \"self\", use the \"self\" transition\n   */\n  public async page(\n    href: string,\n    trigger: Trigger,\n    event: LinkEvent | PopStateEvent,\n    self: boolean\n  ): Promise<void> {\n    this.data.next.url = {\n      href,\n      ...this.url.parse(href),\n    };\n    this.data.trigger = trigger;\n    this.data.event = event;\n\n    let page;\n\n    if (this.cache.has(href)) {\n      page = this.cache.update(href, { action: 'click' }).request;\n    } else {\n      const pageRequest = this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, trigger),\n        this.cache,\n        this.headers\n      );\n\n      // manage 301 server response: replace history\n      pageRequest.then(response => {\n        /* istanbul ignore next: bypass jest since xhr-mock doesn't support custom xhr.responseURL */\n        if (response.url.href !== href) {\n          this.history.add(response.url.href, trigger, 'replace');\n        }\n      });\n\n      page = this.cache.set(href, pageRequest, 'click', 'pending').request;\n    }\n\n    // Need to wait before getting the right transition\n    if (this.transitions.shouldWait) {\n      await helpers.update(page, this.data);\n    }\n\n    const data = this.data;\n\n    // Hook: between trigger and transition\n    // Can be used to resolve \"route\"…\n    await this.hooks.do('page', data);\n\n    try {\n      const transition = this.transitions.get(data, {\n        once: false,\n        self,\n      }) as ITransitionPage;\n\n      await this.transitions.doPage({\n        data,\n        page,\n        transition,\n        wrapper: this._wrapper,\n      });\n\n      this._resetData();\n    } catch (error) {\n      // Something went wrong (rejected promise, error, 404, 505, other…)\n      // TODO: manage / use cases for cancellation\n      // this.logger.debug('Transition cancelled');\n\n      // If transition error and no debug mode, force reload page.\n      /* istanbul ignore else */\n      if (Logger.getLevel() === 0) {\n        this.force(data.next.url.href);\n      }\n    }\n  }\n\n  /**\n   * When a request error occurs.\n   *\n   * Allow the user to manage request error. (E.g: 404)\n   */\n  public onRequestError(trigger: Trigger, ...args: any): boolean {\n    // Cancel transition status\n    this.transitions.isRunning = false;\n\n    const [href, response]: [string, RequestErrorOrResponse] = args;\n    const action = this.cache.getAction(href);\n    this.cache.delete(href);\n\n    // Custom requestError returning false will return here.\n    if (\n      this._requestCustomError &&\n      this._requestCustomError(trigger, action, href, response) === false\n    ) {\n      return false;\n    }\n\n    // Force page change\n    if (action === 'click') {\n      this.force(href);\n    }\n    return false;\n  }\n\n  /**\n   * Programmatically prefetch\n   */\n  public prefetch(href: string) {\n\n    // only prefetch absolute href\n    href = this.url.getAbsoluteHref(href);\n\n    // Already in cache\n    /* istanbul ignore next */\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, 'barba'),\n        this.cache,\n        this.headers\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'prefetch',\n      'pending'\n    );\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _bind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.addEventListener('mouseover', this._onLinkEnter);\n      document.addEventListener('touchstart', this._onLinkEnter);\n    }\n    document.addEventListener('click', this._onLinkClick);\n    window.addEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _unbind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.removeEventListener('mouseover', this._onLinkEnter);\n      document.removeEventListener('touchstart', this._onLinkEnter);\n    }\n    document.removeEventListener('click', this._onLinkClick);\n    window.removeEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * When a element is entered.\n   *\n   * Get valid link element.\n   * Cache URL if needed.\n   */\n  private _onLinkEnter(e: LinkEvent): void {\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    const href = this.url.getAbsoluteHref(this.dom.getHref(link));\n\n    if (this.prevent.checkHref(href)) {\n      return;\n    }\n\n    // Already in cache\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, link),\n        this.cache,\n        this.headers\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'enter',\n      'pending'\n    );\n  }\n\n  /**\n   * When an element is clicked.\n   *\n   * Get valid link element.\n   * Prevent same URL.\n   * Go for a Barba transition.\n   */\n  private _onLinkClick(e: LinkEvent): void {\n\n    // This use `prevent.checkLink` under the hood to get eligible link.\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    if (this.transitions.isRunning && this.preventRunning) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      return;\n    }\n\n    this._linkEvent = e;\n\n    this.go(this.dom.getHref(link), link, e);\n  }\n\n  /**\n   * When History state changes.\n   *\n   * Get \"href\" from URL\n   * Go for a Barba transition.\n   */\n  private _onStateChange(e: PopStateEvent): void {\n    this.go(this.url.getHref(), 'popstate', e);\n  }\n\n  /**\n   * Get a valid link ancestor.\n   *\n   * Check for a \"href\" attribute.\n   * Then check if eligible for Barba.\n   */\n  private _getLinkElement(e: LinkEvent): Link {\n    let el = e.target as Link;\n\n    while (el && !this.dom.getHref(el)) {\n      el = (el as HTMLElement).parentNode as Link;\n    }\n\n    // Check prevent\n    if (!el || this.prevent.checkLink(el, e, this.dom.getHref(el))) {\n      return;\n    }\n\n    return el;\n  }\n\n  /**\n   * Reset pages data.\n   *\n   * Set \"current\" and unset \"next\".\n   */\n  private _resetData() {\n    const href = this.url.getHref();\n    const current = {\n      container: this.dom.getContainer(),\n      html: this.dom.getHtml(),\n      namespace: this.dom.getNamespace(),\n      url: {\n        href,\n        ...this.url.parse(href),\n      },\n    };\n\n    this._data = {\n      current,\n      event: undefined,\n      next: { ...this.schemaPage },\n      trigger: undefined,\n    };\n\n    this.hooks.do('reset', this.data);\n  }\n}\n\nconst core = new Core();\n\nexport default core;\n", "import barba from \"@barba/core\";\nimport { makeElemToggler, getDeviceType } from \"./sitefunctions\";\nimport Animation from \"./animations.js\";\nimport Svg from \"./svg.js\";\nconst svg = new Svg();\n\ngsap.registerPlugin(InertiaPlugin);\ngsap.registerPlugin(ScrollTrigger);\n\nlet openBtn = document.getElementById(\"openbtn\");\nlet navi = document.getElementById(\"navi\");\nlet menububls = document.querySelectorAll(\".pagebubls\");\nlet support = getDeviceType();\n\nlet intFrameWidth = window.innerWidth;\nconsole.log(\"page width \" + intFrameWidth);\n\nconst BREAK_ANIMATION = 1200;\n\nmakeElemToggler(openBtn, navi, \"visible\");\n\nmenububls.forEach(function (i) {\n  i.addEventListener(\"click\", function () {\n    openBtn.classList.remove(\"closeBtn\");\n    document.documentElement.style.overflowY = \"scroll\";\n    openBtn.innerHTML = \"menu\";\n  });\n});\n\nopenBtn.addEventListener(\"click\", function () {\n  if (this.classList.contains(\"closeBtn\")) {\n    this.classList.remove(\"closeBtn\");\n    this.innerHTML = \"menu\";\n    document.documentElement.style.overflowY = \"scroll\";\n  } else {\n    this.classList.add(\"closeBtn\");\n    this.innerHTML = \" \";\n    document.documentElement.style.overflowY = \"hidden\";\n  }\n});\n\nfunction _spinWheel(e) {\n  let top = document.querySelector(\".b-top\");\n\n  if (e.target === top) {\n    updateContent(e);\n    return;\n  }\n\n  let old = e.target.className.split(\" \")[2];\n\n  if (old === \"b-left\") {\n    let right = document.querySelector(\".b-right\");\n    top.classList.remove(\"b-top\");\n    top.classList.add(\"b-right\");\n    right.classList.remove(\"b-right\");\n    right.classList.add(\"b-left\");\n    e.target.classList.remove(old);\n    e.target.classList.add(\"b-top\");\n  } else {\n    let left = document.querySelector(\".b-left\");\n    top.classList.remove(\"b-top\");\n    top.classList.add(\"b-left\");\n    left.classList.remove(\"b-left\");\n    left.classList.add(\"b-right\");\n    e.target.classList.remove(old);\n    e.target.classList.add(\"b-top\");\n  }\n  updateContent(e);\n}\n\n// Update description content\nasync function updateContent(e) {\n  let oldTitle = document.querySelector(\".roulette-content .active h1\");\n  let oldContent = document.querySelector(\".roulette-content .active p\");\n  let id = e.target.getAttribute(\"data-id\");\n  let newTitle = document.querySelector(\".\" + id + \" h1\").innerHTML;\n  let newContent = document.querySelector(\".\" + id + \" p\").innerHTML;\n\n  let container = document.querySelector(\".container\");\n  let article = container.querySelector(\"article\");\n\n  container.style.height = container.offsetHeight + \"px\";\n\n  await Animation.fadeGoals(article);\n\n  oldTitle.innerHTML = newTitle;\n  oldContent.innerHTML = newContent;\n\n  let newHeight = article.offsetHeight;\n\n  container.style.height =\n    newHeight +\n    4 * parseFloat(getComputedStyle(document.documentElement).fontSize) +\n    \"px\";\n\n  await Animation.showGoalsContent(article);\n}\n\nfunction addGoalsEvents() {\n  let roulette = document.querySelector(\".roulette\");\n\n  roulette.addEventListener(\"click\", function (event) {\n    _spinWheel(event);\n  });\n}\n\nfunction _changeColors(headerColor, illusClass) {\n  console.log(\" should change headerColor\", headerColor);\n  const header = document.querySelector(\".header\");\n  const allIllus = document.querySelectorAll(\".illus\");\n\n  header.style.color = headerColor;\n\n  for (var i = 0; i < allIllus.length; ++i) {\n    allIllus[i].classList.add(illusClass);\n  }\n}\n\nfunction setupHomePage() {\n  const header = document.querySelector(\".header\");\n  header.style.color = \"#FFE019\";\n  const bgsType = document.querySelectorAll(\".bgcolor\");\n  const allIllus = document.querySelectorAll(\".illus\");\n  const donate = document.querySelector(\".donate\");\n  const bgcolors = [\"bgpink\", \"bggreen\", \"bgyellow\"];\n  let classes = \"\\\\b(\" + bgcolors.join(\"|\") + \")\\\\b\";\n  const regex = new RegExp(classes, \"i\");\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach((entry) => {\n      let entryclass = entry.target.classList.value;\n      const matchedClass = entryclass.match(regex);\n      if (entry.isIntersecting) {\n        header.classList.add(matchedClass[0]);\n        donate.classList.add(matchedClass[0]);\n        allIllus.forEach((illu) => {\n          illu.classList.add(matchedClass[0]);\n        });\n      } else {\n        header.classList.remove(matchedClass[0]);\n        donate.classList.remove(matchedClass[0]);\n        allIllus.forEach((illu) => {\n          illu.classList.remove(matchedClass[0]);\n        });\n      }\n    });\n  });\n\n  Array.prototype.forEach.call(bgsType, (el) => {\n    observer.observe(el);\n  });\n}\n\nfunction setupOtherPages(namespace) {\n  switch (namespace) {\n    case \"journal\":\n    case \"publication\":\n      _changeColors(\"#E5194C\", \"bgwhite\");\n      break;\n    case \"about\":\n    case \"involved\":\n      _changeColors(\"#07453A\", \"bgyellow\");\n      break;\n    case \"donate\":\n      _changeColors(\"#FFE019\", \"bgpink\");\n      break;\n  }\n}\n\nbarba.hooks.leave(() => {\n  if (history.scrollRestoration) {\n    history.scrollRestoration = \"manual\";\n  }\n});\n\nbarba.hooks.enter((data) => {\n  if (history.scrollRestoration) {\n    window.scrollTo(0, 0);\n  }\n});\n\nbarba.init({\n  sync: true,\n  debug: true,\n  prevent: ({ el }) => el.classList && el.classList.contains(\"barba-prevent\"),\n  transitions: [\n    {\n      name: \"opacity-transition\",\n      async leave(data) {\n        await Animation.leave(data.current.container);\n      },\n      async enter(data) {\n        try {\n          await svg.initialize();\n          await svg.showSvg(data.next.container);\n\n          Animation.enter(data.next.container);\n          if (data.next.namespace === \"home\") {\n            addGoalsEvents();\n            if (support !== \"mobile\") {\n              Animation.addTextAnimation();\n              Animation.addBtnAnimation();\n            }\n            setupHomePage();\n          } else {\n            setupOtherPages(data.next.namespace);\n          }\n        } catch (error) {\n          console.error(\"Error during enter transition:\", error);\n        }\n      },\n      async once(data) {\n        try {\n          await svg.initialize();\n          await svg.showSvg(data.next.container);\n\n          if (data.next.namespace === \"home\") {\n            addGoalsEvents();\n            if (support !== \"mobile\") {\n              Animation.addTextAnimation();\n              Animation.addBtnAnimation();\n            }\n            setupHomePage();\n          } else {\n            setupOtherPages(data.next.namespace);\n          }\n        } catch (error) {\n          console.error(\"Error during initial page load:\", error);\n        }\n      },\n    },\n  ],\n});\n", "export function makeElemToggler(togglerElem, targetElem, classString){\r\n    togglerElem.addEventListener('click', toggleClass(targetElem, classString))\r\n}\r\n\r\nexport function getDeviceType () {\r\n    const ua = navigator.userAgent;\r\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\r\n        return \"tablet\";\r\n    }\r\n    if (\r\n        /Mobile|iP(hone|od)|Android|BlackBerry|IEMobile|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(\r\n        ua\r\n        )\r\n    ) {\r\n        return \"mobile\";\r\n    }\r\n    return \"desktop\";\r\n};\r\n\r\nconst toggleClass = (element, classtoToggle) => {\r\n    return () => {\r\n        element.classList.toggle(`${classtoToggle}`);\r\n    };\r\n};", "class Animation {\n  enterGoals(current, next) {\n    let tl = gsap.timeline();\n    const content = next.querySelector(\".goals-content\");\n\n    return tl\n      .to(current, { display: \"none\", duration: 0 })\n      .from(content, { opacity: 0, duration: 0.5 }, \"<\");\n  }\n\n  fadeGoals(elem) {\n    let tl = gsap.timeline();\n\n    return tl.to(elem, { opacity: 0, duration: 0.5 });\n  }\n\n  addTextAnimation() {\n    let tl = gsap.timeline();\n\n    return tl\n      .to(\"#textFirst\", { backgroundPosition: \"0 0\", duration: 1 })\n      .to(\"#textSecond\", { backgroundPosition: \"0 0\", duration: 0 }, \"<2.5\");\n  }\n\n  addBtnAnimation() {\n    const tl = gsap\n      .timeline({\n        scrollTrigger: {\n          trigger: \".storyAnim\",\n          scrub: true,\n          pin: true,\n          start: \"bottom bottom\",\n          end: \"+=40%\",\n        },\n      })\n      .to(\".butbtn\", { bottom: 0, transform: \"none\", scale: 8, ease: \"none\" })\n      .to(\".nextpage\", { ease: \"none\", top: \"65%\" }, 0, 0.5);\n\n    const tl2 = gsap\n      .timeline({\n        scrollTrigger: {\n          trigger: \".storypage\",\n          scrub: true,\n          pin: true,\n          start: \"bottom bottom\",\n          end: \"+=40%\",\n        },\n      })\n      .to(\".butbtn2\", { bottom: 0, transform: \"none\", scale: 8, ease: \"none\" })\n      .to(\".nextpage2\", { ease: \"none\", top: \"65%\" }, 0, 0.5);\n  }\n\n  showGoalsContent(elem) {\n    let tl = gsap.timeline();\n\n    return tl\n    .set(elem, { opacity: 0 }) // Set initial opacity to 0\n    .to(elem, { opacity: 1, duration: 0.5 });\n  }\n\n  // get color from barba container => [data-transition]\n  _getColor(elem) {\n    const color = elem.dataset.transition;\n\n    return color;\n  }\n\n  enter(elem) {\n    let tl = gsap.timeline();\n    const navi = document.querySelector(\".visible\");\n    const color = this._getColor(elem);\n\n    if (navi) {\n      navi.classList.remove(\"visible\");\n    }\n\n    return tl\n      .to(\".transition\", { backgroundColor: color, duration: 0.5 })\n      .to(\".transition\", { width: 0, height: 0, duration: 1 }, \"<\");\n  }\n\n  leave(elem) {\n    let tl = gsap.timeline();\n    const color = this._getColor(elem);\n\n    return tl\n      .to(\".transition\", { backgroundColor: color, duration: 0 })\n      .to(\".transition\", { height: \"200vw\", width: \"200vw\", duration: 1 }, \"<\");\n  }\n}\n\nexport default new Animation();", "class Svg {\n  constructor() {\n    this.ILLUSTRATION_COUNT = 48;\n    this.ILLUSTRATION_NAMES = Array.from(\n      { length: this.ILLUSTRATION_COUNT },\n      (_, i) => `illu${i + 1}`,\n    );\n    this.SECTION_HEIGHT = 700;\n    this.SVG_SIZE = \"30vw\";\n    this.SVG_CONTENT = [];\n    this.svgCache = new Map();\n  }\n\n  async initialize() {\n    try {\n      for (const name of this.ILLUSTRATION_NAMES) {\n        const svg = await this.loadSvg(name);\n        if (svg) {\n          this.SVG_CONTENT.push([svg, this.extractViewBox(svg)]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error during initialization:\", error);\n    }\n  }\n\n  async loadSvg(name) {\n    if (this.svgCache.has(name)) {\n      return this.svgCache.get(name);\n    }\n    try {\n      const response = await fetch(`/assets/skp_illustrations/${name}.svg`);\n      if (!response.ok) throw new Error(`SVG not found: ${name}`);\n      const svgText = await response.text();\n      this.svgCache.set(name, svgText);\n      return svgText;\n    } catch (error) {\n      console.error(`Error loading SVG \"${name}\":`, error);\n      return null;\n    }\n  }\n\n  extractViewBox(svgText) {\n    try {\n      const match = svgText.match(/viewBox=\"([^\"]+)\"/);\n      return match ? match[1] : \"0 0 100 100\"; // default viewBox if not found\n    } catch (error) {\n      console.error(\"Error extracting viewBox:\", error);\n      return \"0 0 100 100\"; // default viewBox\n    }\n  }\n\n  _shuffleArray(array) {\n    if (!Array.isArray(array)) {\n      console.error(\"Invalid array provided to _shuffleArray\");\n      return [];\n    }\n    let currentIndex = array.length,\n      randomIndex;\n    // While there remain elements to shuffle...\n    while (currentIndex != 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n    return array;\n  }\n\n  _getFruits(svgArray, nbrFruits) {\n    if (!Array.isArray(svgArray) || typeof nbrFruits !== \"number\") {\n      console.error(\"Invalid parameters for _getFruits\");\n      return [];\n    }\n    const shuffled = this._shuffleArray([...svgArray]);\n    return shuffled.slice(0, nbrFruits);\n  }\n\n  async showSvg(elem) {\n    try {\n      if (!elem || !elem.offsetHeight) {\n        console.error(\"Invalid element passed to showSvg\");\n        return;\n      }\n\n      if (this.SVG_CONTENT.length === 0) {\n        await this.initialize();\n      }\n\n      const nbrFruits = Math.floor(elem.offsetHeight / this.SECTION_HEIGHT);\n      const fruits = this._getFruits(this.SVG_CONTENT, nbrFruits);\n      const fragment = document.createDocumentFragment();\n\n      fruits.forEach((fruit, i) => {\n        try {\n          // Parse the SVG text into an SVG DOM element\n          const parser = new DOMParser();\n          const svgDoc = parser.parseFromString(fruit[0], \"image/svg+xml\");\n          const svgElem = svgDoc.documentElement;\n\n          // Check if parsing produced a valid SVG element\n          if (!(svgElem instanceof SVGElement)) {\n            throw new Error(\"Parsed element is not an SVG element\");\n          }\n\n          // Apply classes to the SVG element\n          svgElem.classList.add(\"illus\", i % 2 ? \"left\" : \"right\");\n\n          const top =\n            i < 2\n              ? `calc(25vh * ${i + 1})`\n              : `${this.SECTION_HEIGHT / 2 + this.SECTION_HEIGHT * (i - 1)}px`;\n          const rotation = this._getRandomArbitrary(10, 15) * (i % 2 ? 1 : -1);\n\n          // Apply styles directly to the SVG element\n          svgElem.style.cssText = `\n            position: absolute;\n            z-index: 2;\n            top: ${top};\n            ${i % 2 ? \"left: -15vw;\" : \"right: -15vw;\"}\n            transform: rotate(${rotation}deg);\n            height: ${this.SVG_SIZE};\n            width: ${this.SVG_SIZE};\n          `;\n\n          // Optionally, set attributes using GSAP if needed\n          if (typeof gsap !== \"undefined\") {\n            gsap.set(svgElem, {\n              attr: {\n                viewBox: fruit[1],\n              },\n            });\n          } else {\n            console.warn(\"GSAP is not available.\");\n            // Fallback: set the viewBox directly\n            svgElem.setAttribute(\"viewBox\", fruit[1]);\n          }\n\n          fragment.appendChild(svgElem);\n        } catch (error) {\n          console.error(`Error processing fruit at index ${i}:`, error);\n        }\n      });\n\n      elem.appendChild(fragment);\n    } catch (error) {\n      console.error(\"Error in showSvg:\", error);\n    }\n  }\n\n  _getRandomArbitrary(min, max) {\n    if (typeof min !== \"number\" || typeof max !== \"number\") {\n      console.error(\"Invalid parameters for _getRandomArbitrary\");\n      return 0;\n    }\n    return Math.random() * (max - min) + min;\n  }\n}\n\nexport default Svg;\n"],
  "mappings": "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",
  "names": ["before", "beforeLeave", "leave", "this", "afterLeave", "beforeEnter", "enter", "afterEnter", "after", "t", "LogLevels", "a", "v", "_level", "off", "Logger", "_source", "getLevel", "n", "setLevel", "name", "_proto", "prototype", "error", "console", "slice", "arguments", "warn", "info", "_log", "debug", "i", "fn", "objects", "level", "apply", "l", "concat", "str", "replace", "p", "m", "sensitive", "container", "history", "namespace", "prefix", "w", "wrapper", "_attr", "schemaAttribute", "_parser", "_sibling", "parent", "toString", "el", "outerHTML", "toDocument", "htmlString", "DOMParser", "parseFromString", "toElement", "document", "createElement", "innerHTML", "doc", "documentElement", "getWrapper", "querySelector", "getContainer", "scope", "removeContainer", "contains", "parentNode", "removeChild", "addContainer", "siblingBefore", "_insertAfter", "insertBefore", "appendChild", "getSibling", "getNamespace", "ns", "getAttribute", "getHref", "tagName", "toLowerCase", "href", "resolveUrl", "baseVal", "base", "r", "getElementsByTagName", "e", "firstChild", "o", "resolved", "index", "referenceNode", "nextSibling", "nextElementSibling", "previousElementSibling", "parentElement", "History", "_session", "_states", "_pointer", "init", "data", "scroll", "window", "scrollX", "scrollY", "url", "push", "state", "from", "states", "replaceState", "change", "trigger", "add", "action", "_getAction", "method", "size", "set", "item", "u", "pushState", "store", "get", "update", "remove", "pop", "clear", "newStates", "hasAttribute", "attr", "diff", "abs", "key", "y", "g", "length", "_temp", "html", "page", "then", "response", "b", "next", "dom", "nextDocument", "title", "Promise", "resolve", "E", "pathToRegexp", "path", "keys", "options", "RegExp", "execResult", "exec", "source", "suffix", "modifier", "pattern", "Array", "isArray", "paths", "parts", "join", "arrayToRegexp", "tokens", "strict", "_b", "start", "end", "_c", "_d", "encode", "h", "d", "x", "delimiter", "_e", "_f", "endsWith", "endsWithRe", "escapeString", "P", "delimiterRe", "route", "tokens_1", "_i", "token", "mod", "O", "k", "isEndDelimited", "endToken", "indexOf", "undefined", "tokensToRegexp", "char", "type", "value", "TypeError", "s", "j", "count", "code", "charCodeAt", "f", "lexer", "prefixes", "_a", "defaultPattern", "tryConsume", "result", "c", "consumeText", "pattern_1", "requestAnimationFrame", "getOrigin", "location", "origin", "parse", "port", "matches", "match", "test", "portString", "substring", "parseInt", "hash", "query", "hashIndex", "queryIndex", "parseQuery", "split", "reduce", "acc", "A", "baseURI", "stringify", "JSON", "T", "cache", "ttl", "XMLHttpRequest", "onreadystatechange", "xhr", "readyState", "status", "responseURL", "responseText", "target", "statusText", "requestError", "Error", "onerror", "reject", "open", "setRequestHeader", "all", "forEach", "send", "obj", "S", "runAsync", "ctx", "_arguments", "async", "err", "func", "call", "answer", "_HookMethods", "Hooks", "logger", "_this", "registered", "Map", "hook", "_this2", "Set", "has", "chain", "_this3", "_this4", "HookMethods", "hooks", "Ignore", "_ignoreAll", "_ignoreRegexes", "ignore", "checkHref", "some", "_", "regex", "Cache", "_Ignore", "_state", "request", "getRequest", "getAction", "getStatus", "getTarget", "_extends", "Headers", "_list", "q", "event", "which", "metaKey", "ctrlKey", "shiftKey", "_ref3", "protocol", "hostname", "_ref5", "_ref6", "X", "prevent", "Boolean", "closest", "Prevent", "suite", "F", "I", "exists", "newTab", "corsDomain", "preventAll", "sameUrl", "check", "tests", "run", "checkLink", "BarbaError", "_Error", "label", "captureStackTrace", "K", "_wrapNativeSuper", "Store", "transitions", "once", "_rules", "splice", "position", "filters", "filter", "self", "matching", "active", "find", "valid", "reverse", "rule", "to", "_check", "transitionType", "_this$logger", "infos", "activeMatch", "map", "_addPriority", "sort", "priority", "transition", "direction", "isValid", "current", "names", "strRule", "hasMatch", "objRule", "fnName", "ruleName", "ruleIndex", "Math", "pow", "Y", "Transitions", "_running", "doOnce", "V", "_doAsyncHook", "_temp2", "doPage", "_ref2", "_temp11", "_result5", "sync", "_temp9", "_result2", "_catch", "W", "_isTransitionError", "leaveResult", "_temp3", "_leaveResult", "values", "_temp4", "_temp5", "_temp6", "_temp7", "_temp8", "helpers", "L", "message", "_createClass", "byNamespace", "view", "Views", "_createHook", "Element", "msMatchesSelector", "webkitMatchesSelector", "tt", "nodeType", "schemaPage", "Core", "version", "plugins", "timeout", "cacheIgnore", "cacheFirstPage", "prefetchIgnore", "preventRunning", "headers", "views", "_data", "_requestCustomError", "_wrapper", "_linkEvent", "use", "plugin", "installedPlugins", "install", "_ref", "_ref$transitions", "_ref$schema", "schema", "_ref$timeout", "_ref$cacheIgnore", "_ref$cacheFirstPage", "_ref$prefetchIgnore", "_ref$preventRunning", "_ref$prevent", "preventCustom", "_ref$logLevel", "logLevel", "_ref$debug", "Object", "_resetData", "D", "J", "_onLinkEnter", "bind", "_onLinkClick", "_bind", "onceData", "destroy", "_unbind", "force", "assign", "go", "isRunning", "getPath", "getQuery", "hasSelf", "stopPropagation", "preventDefault", "readyData", "hasOnce", "onRequestError", "pageRequest", "shouldWait", "getAbsoluteHref", "addEventListener", "removeEventListener", "link", "_getLinkElement", "getHtml", "import_core", "makeElemToggler", "togglerElem", "targetElem", "classString", "toggleClass", "getDeviceType", "ua", "element", "classtoToggle", "Animation", "current", "next", "tl", "content", "elem", "tl2", "navi", "color", "animations_default", "Svg", "_", "i", "name", "svg", "error", "response", "svgText", "match", "array", "currentIndex", "randomIndex", "svgArray", "nbrFruits", "elem", "fruits", "fragment", "fruit", "svgElem", "top", "rotation", "min", "max", "svg_default", "svg", "svg_default", "openBtn", "navi", "menububls", "support", "getDeviceType", "intFrameWidth", "makeElemToggler", "openBtn", "navi", "menububls", "i", "_spinWheel", "e", "top", "updateContent", "old", "right", "left", "oldTitle", "oldContent", "id", "newTitle", "newContent", "container", "article", "animations_default", "newHeight", "addGoalsEvents", "event", "_changeColors", "headerColor", "illusClass", "header", "allIllus", "setupHomePage", "bgsType", "donate", "classes", "regex", "observer", "entries", "entry", "matchedClass", "illu", "el", "setupOtherPages", "namespace", "barba", "data", "svg", "support", "error"]
}
